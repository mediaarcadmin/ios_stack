<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Unknown</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <meta name="DC.Title" content="Unknown"/>
    <style type="text/css">body { margin: 0%;padding: 0%;} .cover { text-align: center;margin-left: 0%;margin-right: 0%;} .coverpage { text-align: center;vertical-align: middle;text-shadow: #000 0px 1px 1px;margin-left: 0px;margin-right: 0px;margin-top: 0px;padding-top: 3em;margin-botton: 3em;font-size: 3.0em;background: #2F4F4F;} .coverimg { margin-top: 0%;margin-left: 0%;margin-right: 0%;width: 100%;} p { margin-left: 1em;margin-right: 1em;text-align: justify;} span { margin-top: 0%;margin-bottom: 0%;margin-left: 1em;margin-right: 1em;text-align: justify;text-indent: 1.5em;} div { margin-top: 0%;margin-bottom: 0%;margin-left: 1em;margin-right: 1em;text-align: justify;text-indent: 1.5em;} p { margin-top: 0%;margin-bottom: 0%;margin-left: 1em;margin-right: 1em;text-align: justify;text-indent: 1.5em;} blockquote { margin-top: 0%;margin-bottom: 0%;margin-left: 1em;margin-right: 1em;text-align: justify;text-indent: 1.5em;} h1 { text-align: center;} h2 { text-align: center;} h3 { text-align: center;} h4 { text-align: center;} h5 { text-align: center;} h6 { text-align: center;}</style>
  </head>
  <body>
      <h1>Unknown</h1>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 111 — #51
✐
✐
✐
✐
✐
✐
2.4 Relations and Equivalences 111
20. A playground consists of several structures, some of which are connected
by bridges. The ground is covered with bark chips. Deﬁne a relation on
the set of structures on the playground as follows: two structures are
related if it is possible for a child to get from one to the other without
walking on the bark chips (otherwise known as “hot lava”).
(a) Can you imagine a playground for which this would not be an equiv-
alence relation? Explain.
(b) Suppose this relation is an equivalence. In the language of play-
ground equipment, describe the equivalence classes.
21. LetGbeaconnected,undirectedgraph,andletV bethesetofallvertices
in G. Deﬁne a relation R on V as follows: for any vertices a,b∈V, aRb
if there is a path from a to b with an even number of edges. (A path
may use the same edge more than once.) Prove that R is an equivalence
relation.
22. Suppose the equivalence relation of Exercise 21 is deﬁned on the vertices
of the following graph. What are the equivalence classes?
a
c
e
f
g
b
d
23. Recall the deﬁnition of even numbers.
Deﬁnition. An integer n is even if n =2k for some integer k.
Deﬁne a relation R on Z by xRyif x+y is even.
(a) Show that R is an equivalence relation.
(b) Describe the equivalence classes formed by this relation.
24. Lemma 2.1 states that the “≡ mod n” relation on Z is transitive. Show
that it is also symmetric and reﬂexive.
25. Compute the following arithmetic problems in Z/8. Represent your an-
swer with the least positive representative of the appropriate equivalence
class.
(a) [3]+[7]
(b) [2]·([4]+[5])
(c) ([3]+[4])·([5]+[6])</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 112 — #52
✐
✐
✐
✐
✐
✐
112 Chapter 2 a73 Relational Thinking
26. For any [x]∈Z/n and any k∈Z, we can deﬁne k[x]by
k[x]=[x]+[x]+···+[x]
bracehtipupleft bracehtipdownrightbracehtipdownleft bracehtipupright
k times
where the result is an element of Z/n.Wesayk[x]isamultiple of [x].
(a) List all the multiples of [3] in Z/9.
(b) List all the multiples of [3] in Z/8.
27. Consider the function p: Z −→ Z/n deﬁned by p(n)=[n]. Prove that
this function is onto but not one-to-one.
28. Construct the addition and multiplication tables for Z/4.
29. Construct the multiplication table for Z/11.
Exercises 30–32 deal with the method of using check digits in ISBN
numbers. Prior to 2007, every commercially available book was given a
10-digit International Standard Book Number, usually printed on the
back cover next to the barcode. The ﬁnal character of this 10-digit string
is a special digit used to check for errors in typing the ISBN number.
If the ﬁrst nine digits of an ISBN number are a
1
a
2
a
3
a
4
a
5
a
6
a
7
a
8
a
9
, the
tenth digit is given by the formula
a
10
=(1a
1
+2a
2
+3a
3
+4a
4
+5a
5
+6a
6
+7a
7
+8a
8
+9a
9
)mod11,
where a
10
= X if this value is 10.
30. CalculatethetenthdigitoftheISBNwhoseﬁrstninedigitsare039481500.
31. Suppose a
1
a
2
a
3
a
4
a
5
a
6
a
7
a
8
a
9
a
10
is a valid ISBN number. Show that
(1a
1
+2a
2
+3a
3
+4a
4
+5a
5
+6a
6
+7a
7
+8a
8
+9a
9
+10a
10
)≡0mod11.
32. Is 0060324814 a valid ISBN number?
*33. Showthatthecheckdigitwillalwaysdetecttheerrorofswitchingtwoad-
jacentdigits.Thatis,showthata
1
···a
k
a
k+1
···a
9
anda
1
···a
k+1
a
k
···a
9
have diﬀerent check digits.
*34. Show that the check digit will always detect the error of changing a single
digit. Hint: The proof has something to do with the multiplication table
for Z/11 (Exercise 29).</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 113 — #53
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 113
*35. Unfortunately,thereweretoomanybooksandnotenoughISBNnumbers;
eﬀective January 2007, ISBN numbers must be 13 digits long. The check
digit scheme for 13-digit ISBN numbers is diﬀerent. Explain why the
obvious modiﬁcation to the old system won’t work. That is, ﬁnd a 12-
digit string a
1
a
2
···a
12
where the quantity
(1a
1
+2a
2
+···+12a
12
)mod14
doesn’t change after changing a single digit.
*36. Will the “obvious modiﬁcation” in Exercise 32 detect the error of switch-
ing two adjacent digits?
2.5 Partial Orderings
Most of the relationships modeled in the previous section express sameness; an
equivalence relation is a mathematical way of describing how two objects are
similar. However, there are many situations in which we would like to quantify
how objects of a set are diﬀerent from each other. The relations in this section
will give us a mathematical way to analyze comparisons and rankings.
2.5.1 Deﬁnition and Examples
In addition to equivalence relations, there is another type of relation that is
worth studying as a special case. Compare the following with Deﬁnition 2.7.
Deﬁnition 2.8 A relation R on a set S is a partial ordering if it satisﬁes all
three of the following properties.
1. Reﬂexivity. For any a∈S, aRa.
2. Transitivity. For any a,b,c∈S,ifaRband bRc, then aRc.
3. Antisymmetry. For any a,b∈S,ifaRband bRa, then a = b.
The reﬂexivity and transitivity properties are the same as in the deﬁnition
of an equivalence relation, but the third property is new: it is called “antisym-
metry” because it says that aRbnever happens when bRa, unless a = b.
Example 2.48 If S isasetofnumbers,then≤deﬁnesapartialorderingonS.
Since Example 2.48 is a natural example of a relation that is reﬂexive,
antisymmetric, and transitive, we will often use the symbol precedesequal to represent a
genericpartialorderingrelation(insteadofR).Thisnotationhastheadvantage
of allowing us to write a≺b when aprecedesequalb and anegationslash= b.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 114 — #54
✐
✐
✐
✐
✐
✐
114 Chapter 2 a73 Relational Thinking
Example 2.49 Let S be any set, and letP(S) be the power set of S. Then⊆
deﬁnes a partial ordering on P(S).
Proof Let A∈P(S). Then A⊆A, since x∈A obviously implies that x∈A.
So ⊆ is reﬂexive.
Let A,B,C ∈P(S), and suppose A⊆B and B ⊆C. Then for all x∈S,
x∈A⇒x∈B and x∈B ⇒x∈C,sox∈A⇒x∈C.ThusA⊆C,so⊆ is
transitive.
Finally, let A,B ∈P(S), and suppose that A ⊆ B and B ⊆ A. Then
x∈A⇔x∈B,soA = B. Therefore ⊆ is antisymmetric. square
Example 2.50 The “divides” relation | deﬁnes a partial ordering on N. The
proof of this is an exercise.
If a set X has a partial ordering precedesequal on it, we say that (X,precedesequal) is a partially
ordered set, or poset, for short. In a poset, it is possible to have elements a and
b such that neither aprecedesequalb nor bprecedesequala. Such elements are called incomparable.In
Example 2.50, 12 and 25 are incomparable because 12 notbar 25 and 25 notbar 12.
If a poset (X,precedesequal) has no incomparable elements, it is called a total ordering.
For example, the real numbers R are totally ordered by the ≤ relation.
2.5.2 Hasse Diagrams
In the last section, we saw that the key fact about equivalence relations was
thattheybreakasetupintopartitions.Partialorderingsareimportantbecause
they deﬁne a hierarchy among the elements of a set. We use Hasse diagrams to
describe this hierarchy graphically.
Suppose precedesequal is a partial ordering on a set X. A Hasse diagram for (X,precedesequal)
consists of a label, or node, for each element in the set, along with lines con-
necting related nodes. More speciﬁcally, if x,y are distinct elements of X with
xprecedesequaly, and there are no elements z such that x≺z ≺y, then there should be
an upward sloping line from node x to node y in the Hasse diagram.
Example 2.51 LetT ={1,2,3}andconsidertheposet(P(T),⊆).Sincethere
areeightsubsetsofT,theHassediagramhaseightnodes.SeeFigure2.19.Note
that by following the edges up the diagram, you move from one set to another
set that contains it. And since ⊆ is transitive, every set you encounter as you
move up the diagram will contain the set where you started.
Like binary search trees, Hasse diagrams are graphs with extra information
encoded in the way the graph is drawn. Traditionally, Hasse diagrams don’t
have arrows, but the edges are, in fact, directed: in an edge between nodes x
and y, x is drawn above y when yprecedesequalx.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 115 — #55
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 115
{1, 2, 3}
{1, 3} {2, 3}{1, 2}
{1} {2} {3}
0
Figure 2.19 The Hasse diagram for (P({1,2,3}),⊆).
Example 2.52 Let X ={2,3,4,5,6,7,8}, and say two elements a,b∈X are
related if a | b. Figure 2.20 shows the Hasse diagram for this poset. Compare
this to the graph in Example 2.40, and notice that there are no edges in the
Hassediagrambetweenrelatednodesthatareconnectedbyasequenceofedges.
Herewedon’tneedanedgebetween2and8,sinceyoucangettherevianode4.
A partial order on a set gives you a way of comparing elements and ranking
them. In this ranking system, there are often least elements and greatest ele-
ments. If (X,precedesequal) is a poset, we say that an element m∈X is minimal if there is
no x∈X (xnegationslash= m) such that xprecedesequalm. Similarly, we say that an element M ∈X
is maximal if there is no x ∈ X (x negationslash= M) such that M precedesequal x. For example, in
Figure 2.20, the minimal elements are 2 and 3 and the only maximal element
is 8. In Figure 2.19, ∅ is minimal and {0,1,2} is maximal.
8
4
23
6
Figure 2.20 The Hasse diagram for (X,|).</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 116 — #56
✐
✐
✐
✐
✐
✐
116 Chapter 2 a73 Relational Thinking
2.5.3 Topological Sorting
Partial orderings are useful for describing the relationships among the parts
of a complex process, such as manufacturing assembly or scheduling. Suppose
that some process consists of a ﬁnite set, T, of tasks. Some tasks are dependent
on others being done ﬁrst. (For example, when you get dressed, you must put
on your socks before putting on your shoes.) If x,y∈T are two tasks, let xprecedesequaly
if x must be done before y. This is a partial ordering.
In most real-world applications, (T,precedesequal) won’t be a totally ordered set. This
is because some steps of the process do not depend on other steps being done
ﬁrst. (You can put your watch on at any time in the process of getting dressed.)
However, if we want to create a schedule in which all of the tasks in T are done
in some sequential order, we need to create a total ordering on T. (At some
point, we just need to decide on an order to put our clothes on.) Furthermore,
thistotalorderingmustbecompatiblewiththepartialordering.Inotherwords,
we need a total order relation precedesequal
t
such that
xprecedesequaly ⇒ xprecedesequal
t
y
for all x,y ∈ T. The technique of ﬁnding such a total ordering is known as
topological sorting.
Performing a topological sort involves making an ordered list of all the
tasks. Represent the partial ordering on T with a Hasse diagram. Then repeat
the following steps until there are no more tasks.
• Choose a minimal element in your Hasse diagram. (Note that you can
always ﬁnd a minimal element, but there might be more than one.) Add
this element to the end of the list you are making.
• Remove the element from your Hasse diagram.
Example 2.53 Julia is interested in completing a Computer Science minor,
and has several courses left to take. Some of the courses have prerequisite
courses that must be taken ﬁrst.
Courses Needed Prerequisites
Calculus I
Calculus II Calculus I
Calculus III Calculus II
Linear Algebra Calculus II
Programming II Calculus I
Software Development Programming II
3D Computer Graphics Calculus III, Linear Algebra, Programming II</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 117 — #57
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 117
3D Computer Graphics
Linear Algebra
Calc III
Calc II
Calc I
Programming II
Software Development
Figure 2.21 The Hasse diagram for Example 2.53.
In what order must Julia take these courses to ensure that she will satisfy the
prerequisites for each course? Is this ordering unique? What is the minimum
number of semesters it will take Julia to ﬁnish?
Solution: Figure 2.21 shows the Hasse diagram for this poset. To perform a
topological sort, we start by choosing a minimal element in the Hasse diagram.
The only minimal element is Calculus I, so that must be Julia’s ﬁrst class. We
then remove Calculus I from the diagram.
After Calculus I has been removed, there are two minimal elements: Cal-
culus II and Programming II. Julia could take either of these next, so the
ordering of courses is not unique. Let’s choose Calculus II as the second course,
and remove it from the diagram. This leaves Linear Algebra, Calculus III, and
Programming II as minimal elements. Julia needs to take all three before she
takes 3D Computer Graphics, and she needs to take Programming II before
she takes software development. Again, the ordering is not unique. One allow-
able order for the remaining classes is Calculus III, Programming II, Software
Development, Linear Algebra, and, ﬁnally, 3D Computer Graphics.
Ifwearetryingtominimizethenumberofsemesters,werepeattheprocess,
exceptateachstagewechoose all theminimalelements,soJuliatakesasmany
courses as she is allowed to take each semester. This would yield the following
schedule.
Semester Courses
1 Calculus I
2 Calculus II, Programming II
3 Calculus III, Linear Algebra, Software Development
4 3D Computer Graphics
♦</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 118 — #58
✐
✐
✐
✐
✐
✐
118 Chapter 2 a73 Relational Thinking
Topological sorting is a pretty simple technique, once you have written the
dependencies in the form of a Hasse diagram. This simplicity illustrates the
power of a graphical approach to a discrete problem.
2.5.4 Isomorphisms
Sometimes two problems are so closely related that solving one gives a solution
to the other. When two mathematical objects are fundamentally the same in
every aspect of structure and function, we can deﬁne a map called an isomor-
phism to describe the similarity.
Example 2.54 LetF ⊆Nbethesetofallfactorsof30,andconsidertheposet
(F,|) given by the “divides” relation. As in Example 2.52, we can construct the
Hasse diagram for this partially ordered set. See Figure 2.22.
NoticehowthisHassediagramhasthesamestructureastheHassediagram
for (P({1,2,3}),⊆) in Example 2.51. These two posets are the same in a very
speciﬁc way.
Deﬁnition 2.9 Let (X
1
,precedesequal
1
) and (X
2
,precedesequal
2
) be partially ordered sets. Then
(X
1
,precedesequal
1
)isisomorphic to (X
2
,precedesequal
2
) if there is a one-to-one correspondence
f: X
1
−→ X
2
such that
aprecedesequal
1
b ⇔ f(a)precedesequal
2
f(b)
for all a,b ∈ X
1
. In this case, we say that f is an isomorphism and we write
(X
1
,precedesequal
1
)
∼
= (X
2
,precedesequal
2
) to denote that these posets are isomorphic.
1
2 3
10
30
6 15
5
Figure 2.22 The Hasse diagram for (F,|).</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 119 — #59
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 119
Thefollowingtabledeﬁnesaone-to-onecorrespondencef: P({1,2,3})−→
F that describes the isomorphism between (F,|) and (P({1,2,3}),⊆).
X ∅ {1} {2} {3} {1,2} {1,3} {2,3} {1,2,3}
f(X) 1 2 3 5 6 10 15 30
Since every element of F appears exactly once in this table, f is a one-to-
one correspondence. To see that X ⊆ Y if and only if f(X) | f(Y) for all
X,Y ⊆{1,2,3}, it is suﬃcient to observe that the edges in the the Hasse
diagram for (F,|) correspond exactly to the edges in the Hasse diagram for
(P({1,2,3}),⊆), and that this correspondence is given by f. This shows that
(F,|)
∼
= (P({1,2,3}),⊆).
At this point it is natural to wonder whether this isomorphism is a happy
coincidence, or perhaps there is something deeper going on. Are the partial
orders given by⊆and|related in some fundamental way? In the exercises, you
will have the opportunity to check that the Hasse diagrams for these relations
agree when applied to the factors of 210 = 2·3·5·7 and the set {1,2,3,4}.
But will this always happen?
Let’s take a closer look at the relationship between the posets (F,|) and
(P({1,2,3}),⊆).Since30 = 2·3·5,everyfactorof30canbewritten(uniquely)
as a product of the form



2
or
1






3
or
1






5
or
1


.
Choosing a factor k ∈ F amounts to choosing whether or not to include each
prime2,3,or5inthisproduct.Similarly,choosingasubsetX oftheset{1,2,3}
amounts to choosing which of the three members 1,2,3 to include in X. This
explains why the above function f is a one-to-one correspondence. The number
3·5 corresponds to the subset {2,3}, for example.
Furthermore, under this one-to-one correspondence, the | relation plays
exactlythesameroleasthe⊆relation.Checking,forexample,that3·5 |2·3·5
is the same as checking that all of the factors on the left are included on the
right, while checking that {2,3}⊆{1,2,3} involves checking that all of the
elements on the left are included on the right. This explains why f is order-
preserving.
The proof of the following theorem generalizes this observation.
Theorem 2.3 Let q = p
1
p
2
···p
n
be the product of the ﬁrst n primes, and let
F ⊆N be the set of all factors of q. Then (F,|)
∼
= (P({1,2,···,n}),⊆).</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 120 — #60
✐
✐
✐
✐
✐
✐
120 Chapter 2 a73 Relational Thinking
Proof Deﬁne a function f: P({1,2,...,n})−→ F by setting f(X)tobethe
product of all the p
i
’s with i∈X. For example,
f({1,3})=p
1
p
3
=2·5=10.
Also, deﬁne f(∅) = 1. In product notation,
f(X)=
productdisplay
i∈X
p
i
expresses the fact that f(X) is the product of all the p
i
’s having i ∈ X.We
claim that f is a one-to-one correspondence.
Proof that f is a one-to-one correspondence Let k ∈ F be a factor of
q. Since q is a product of distinct primes, any factor of q must be a product
of these primes. Therefore k =
producttext
i∈X
p
i
for some X ∈P({1,2,...,n}). So f is
onto.
Toshowthatf isone-to-one,supposethatX andY aresubsetsof{1,2,...,n}
with f(X)=f(Y), that is,
productdisplay
i∈X
p
i
=
productdisplay
i∈Y
p
i
.
Since the prime factorization of a number is unique, X and Y must have the
same elements, so X = Y. square
To show that f is an isomorphism, we also need to show that X ⊆ Y if
and only if f(X)|f(Y). This property of isomorphisms is called “preserving”
the partial ordering.
Proof that f is order-preserving Suppose that X ⊆ Y for some X,Y ⊆
{1,2,...,n}. Then Y consists of two parts: those elements in X and those not
in X. In symbols, Y = X∪(Y \X) is a union of disjoint sets. Therefore
productdisplay
i∈Y
p
i
=
parenleftBigg
productdisplay
i∈X
p
i
parenrightBigg


productdisplay
i∈Y\X
p
i


=
parenleftBigg
productdisplay
i∈X
p
i
parenrightBigg
·k
where k∈N. In other words, f(Y)=k·f(X), so f(X)|f(Y).
Conversely, suppose f(X)|f(Y) for some X,Y ⊆{1,2,...,n}. Then
productdisplay
i∈Y
p
i
= k
parenleftBigg
productdisplay
i∈X
p
i
parenrightBigg</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 121 — #61
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 121
for some k ∈ N. Since prime factorizations are unique, every p
i
factor on the
right side of this equation must also be on the left side. Therefore, X ⊆ Y.
square
square
The above theorem tells us that these posets will always be isomorphic,
and the proof tells us why they are isomorphic. In short, choosing a factor of q
amounts to choosing a list of prime numbers, and this choice corresponds to a
choice of a subset of{1,2,...,n}. The whole proof is based on this observation.
2.5.5 Boolean Algebras ‡
TheisomorphicposetsdescribedbytheHassediagramsinFigures2.20and2.22
are examples of a special kind of partially ordered set called a Boolean algebra.
Thesemathematicalstructureshighlightabeautifulconnectionbetweenpartial
orders and propositional logic.
Let (X,precedesequal) be a poset. For any elements a,b∈X, deﬁne the meet of a and
b (denoted a∧b) to be the greatest lower bound of a and b,ifsuchalower
bound exists. Formally, a∧b is an element of X with the following properties.
1. a∧bprecedesequala and a∧bprecedesequalb.
2. If some x∈X satisﬁes xprecedesequala and xprecedesequalb, then xprecedesequala∧b.
It follows from property 2 that if the meet of two elements exists, then it is
unique. Similarly, we can deﬁne the join of a,b∈X to be the element a∨b∈X
satisfying
1. aprecedesequala∨b and bprecedesequala∨b.
2. If some x∈X satisﬁes aprecedesequalx and bprecedesequalx, then a∨bprecedesequalx.
if such an element exists.
Example 2.55 In Example 2.52, 4∧6=2,2∨3 = 6, but 4∨6 does not exist.
In Example 2.51, {1}∨{2,3}={1,2,3} and {1}∧{2,3}=∅.
If every pair of elements a,b∈X has both a meet and a join, then (X,precedesequal)
is called a lattice. The notation for meet and join is the same as the notation
for “and” and “or” in propositional logic, and this is no accident. In a lattice,
meet and join satisfy the following properties, for all a,b,c∈X.
Commutativity: a∧b = b∧a and a∨b = b∨a.
Associativity: a∨(b∨c)=(a∨b)∨c and a∧(b∧c)=(a∧b)∧c.
Absorption: a∨(a∧b)=a and a∧(a∨b)=a.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 122 — #62
✐
✐
✐
✐
✐
✐
122 Chapter 2 a73 Relational Thinking
If, in addition, a lattice has the following three properties, it is called a
Boolean algebra.
Distributivity: a∨(b∧c)=(a∨b)∧(a∨c) and a∧(b∨c)=(a∧b)∨(a∧c).
Boundedness: There exist elements 0,1∈X such that xprecedesequal1 and 0precedesequalx for
all x∈X.
Complements: For any x ∈ X there exists an element ¬x ∈ X such that
x∧¬x = 0 and x∨¬x = 1.
From our study of set theory, we know that the poset (P({1,2,...,n}),⊆)
satisﬁesallthepropertiesofaBooleanalgebra.Thecorrespondenceissuggested
by the set notation: meet is ∩, join is ∪, 0 is ∅, 1 is {1,2,...,n}, and ¬ is the
set complement. The next theorem states that this is the only ﬁnite Boolean
algebra, up to isomorphism.
Theorem 2.4 Let X be a ﬁnite set. Suppose that the poset (X,precedesequal) is a Boolean
algebra. Then |X|=2
n
for some n∈N, and
(X,precedesequal)
∼
= (P({1,2,...,n}),⊆).
The proof of this theorem is beyond the scope of this book, as are the
theories of lattices and Boolean algebras. But the above deﬁnitions are still
worth knowing, because they illustrate the rich connections between set theory,
propositional logic, and partial orders.
Exercises 2.5
1. Refer to Deﬁnition 1.10. Show that the divisibility relation | makes the
set N of natural numbers a partially ordered set.
2. Explain why the divisibility relation | does not deﬁne a partial ordering
on the set Z of integers.
3. Consider the poset (N,|). Are there any minimal elements? Are there any
maximal elements? Explain.
4. Let A = {a,b,c,... ,z}. In the poset (P(A),⊆), ﬁnd a pair of incompa-
rable elements.
5. Let W be the set of all web pages. For x,y ∈ W, let xRyif you can
navigate from x to y by following links. (Let’s say it is always possible to
“navigate” from a page to itself; just do nothing.) Explain why R is not
a partial ordering.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 123 — #63
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 123
6. Explain why the relation R on {0,1,2,3} given by
R ={(0,0),(1,1),(2,2),(3,3),(0,1),(1,2),(2,3),(0,2),(1,3)}
is not a partial ordering on {0,1,2,3}. Be speciﬁc.
7. Explain why the relation R on {0,1,2,3} given by
R ={(0,0),(1,1),(2,2),(3,3),(0,1),(1,2),(0,2),(2,1)}
is not a partial ordering on {0,1,2,3}. Be speciﬁc.
8. Thedividesrelation“|”deﬁnesapartialorderingontheset{1,2,3,6,8,10}.
Draw the Hasse diagram for this poset. What are the maximal elements?
9. Let X be a set of diﬀerent nonzero monetary values (in US or Canadian
cents). In other words, X ⊆N. Deﬁne a relation |=onX as follows. For
a,b∈X, a|= b if b can be obtained from a by adding a (possibly empty)
collection of dimes (10 cents) and quarters (25 cents). So, for example,
25|= 35, but 25negationslash|= 30. Prove that |= is a partial ordering on X.
10. Let X ={5,10,15,20,25,30,35,40}, and let |= be as in Problem 9.
(a) Draw the Hasse diagram for the poset (X,|=).
(b) List all minimal elements of (X,|=).
(c) Give a pair of incomparable elements in (X,|=).
11. Let X be the following set (of sets of letters).
X ={{b},{b,e},{b,r},{b,e,r},{a,r},{b,a,r},{b,e,a,r,s}}
Then X is a partially ordered set under the ⊆ relation.
(a) Draw the Hasse diagram for this partial ordering.
(b) Name all minimal elements, if any exist.
(c) Name a pair of incomparable elements, if any exist.
12. Let A ={a,b,c}. Use Hasse diagrams to describe all partial orderings on
A for which a is a minimal element. (There are 10.)
13. Suppose you want to write a program that will collect information on a
customer’s tastes and customize web content accordingly. By monitoring
onlineshoppinghabits,youareabletocollectasetofpairwisepreferences
on a set X of products. If x,y∈X are two diﬀerent products, we say that
x precedesequal y if the customer prefers y over x. (In order to satisfy the reﬂexive
property, we stipulate that xprecedesequalx for all x∈X.) Suppose you know the
following things about your customer.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 124 — #64
✐
✐
✐
✐
✐
✐
124 Chapter 2 a73 Relational Thinking
Customer prefers: Over:
lettuce broccoli
cabbage broccoli
tomatoes cabbage
carrots cabbage
carrots lettuce
asparagus lettuce
mushrooms tomatoes
corn tomatoes
corn carrots
eggplant carrots
eggplant asparagus
onions mushrooms
onions corn
Inorderfor(X,precedesequal)tobeaposet,wemustalsoassumethatthecustomer’s
preferences are transitive.
(a) Draw the Hasse diagram for (X,precedesequal).
(b) What is/are the customer’s favorite vegetable(s)? [i.e., what are the
maximal element(s)?] What is/are the least favorite?
(c) Use topological sorting to rank order these vegetables according to
the customer’s preferences. Is the ranking unique?
14. Apartition ofapositiveintegernisalistofpositiveintegersa
1
,a
2
,...,a
k
such that a
1
+a
2
+···+a
k
= n. For example, the following are distinct
partitions of 5.
51,1,1,21,2,21,1,1,1,1
The order of the list doesn’t matter; 1,2,2 is the same partition as 2,1,2.
There is a natural partial ordering on the set of partitions of n:ifP
1
and
P
2
arepartitions,deﬁneP
1
precedesequalP
2
ifP
1
canbeobtainedbycombiningparts
of P
2
. For example, 1,2,2precedesequal1,1,1,1,1 because 1,2,2=1,1+1,1+1. On
the other hand, 2,3 and 1,4 are incomparable elements in this poset.
(a) Writethepartitionsof6inaHassediagram.(Thereare11partitions
of 6.)
(b) Is this a total ordering? Why or why not?
15. Let X ={1,2,3,4}. Draw the Hasse diagram for the poset (P(X),⊆).</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 125 — #65
✐
✐
✐
✐
✐
✐
2.5 Partial Orderings 125
16. Let F ⊆N be the set of all factors of 210. Draw the Hasse diagrams for
(F,|) and (P({1,2,3,4}),⊆) in a way that shows these two posets are
isomorphic.
17. Let A ⊆ N be the set of all factors of 12, and let B ⊆ N be the set of
all factors of n. Find a natural number n negationslash= 12 so that (A,|)
∼
= (B,|).
Give a table of values for the one-to-one correspondence that describes
the isomorphism.
18. Let B be the set of all four-digit binary strings, that is,
B ={0000,0001,0010,0011,...,1110,1111}.
Deﬁne a relation triangleleft on B as follows: Let x,y ∈ B, where x = x
1
x
2
x
3
x
4
and y = y
1
y
2
y
3
y
4
. We say that xtriangleleftyif x
i
≤y
i
for i =1,2,3,4. In other
words, xtriangleleftyif y has a 1 in every position where x does. So, for example,
0101triangleleft0111 and 0000triangleleft0011, but 1010negationslashtriangleleft0111. The relation triangleleft is called the
bitwise ≤. Show that (B,triangleleft) is a poset.
19. Prove that (B,triangleleft)
∼
= (P({1,2,3,4}),⊆).
20. In (B,triangleleft), give a counterexample to show that
0000,0001,0010,0011,0100,0101,0110,0111,1000,1001,1010,0011,1100,
1101,1110,1111
is not a valid topological sort of the elements of B.
21. Perform a topological sort on the elements of B.
22. Let F ⊆ N be the set of all factors of 210. In the poset (F,|), ﬁnd the
following.
(a) 30∧21, the meet of 30 and 21.
(b) 35∨15, join of 35 and 15.
(c) 2∧7.
(d) 2∨7.
(e) ¬30, the complement of 30.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 126 — #66
✐
✐
✐
✐
✐
✐
126 Chapter 2 a73 Relational Thinking
23. Let W ={a,b,c,d,e,f,g,h,i,j,k,l}. Deﬁne a partial order on W by the
Hasse diagram in Figure 2.23.
jkl
fghi
cde
ab
Figure 2.23 Hasse diagram for Exercise 23.
(a) Find two elements of W whose meet exists but whose join does not
exist.
(b) Find two elements of W whose join exists but whose meet does not
exist.
(c) Find two elements of W whose meet and join both do not exist.
24. Let m,n ∈ Z and suppose m ≤ n. In the poset (Z,≤), what are m∧n
and m∨n?
25. Let T be the set of all two-digit ternary strings, that is,
T ={00,01,02,10,11,12,20,21,22}.
Consider the poset (T,triangleleft), where triangleleft is the bitwise≤. Let F ⊆N be the set
of all factors of 36. Draw Hasse diagrams to show that (T,triangleleft)
∼
= (F,|).
26. Consider the poset (T,triangleleft) of the previous problem. This poset is, in fact,
a lattice.
(a) Theorem2.4canbeusedtoshowthat(T,triangleleft)isnotaBooleanalgebra.
How?
(b) Find an element of (T,triangleleft) that has no complement. Explain why.
27. Let P be a set of posets. Prove that
∼
= is an equivalence relation on P.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 127 — #67
✐
✐
✐
✐
✐
✐
2.6 Graph Theory 127
2.6 Graph Theory
We began this chapter with an informal introduction to graphs, and we have
seen several ways to model mathematical relationships with them. We have
also studied how sets, functions, and relations express these ideas in formal
mathematical language. Now that we have developed this new machinery, we
can revisit graphs from a more rigorous perspective. In this section we explore
how to prove theorems about graphs. Some of the topics in this section—in
particular, some of the proofs—will be quite challenging, because the viewpoint
here will be more theoretical than in preceding sections. Fasten your seat belts.
2.6.1 Graphs: Formal Deﬁnitions
In Section 2.1, we gave an informal description of a graph in terms of dots and
lines. Now that we have discussed sets and functions, we can give a mathemat-
ical deﬁnition. Warning: giving a deﬁnition of a graph is tricky; choices need to
be made, and other books might make diﬀerent choices.
Deﬁnition 2.10 A directed graph G is a ﬁnite set of vertices V
G
and a ﬁnite
setofedgesE
G
,alongwithafunctioni: E
G
−→ V
G
×V
G
.Foranyedgee∈E
G
,
if i(e)=(a,b), we say that edge e joins vertex a to vertex b.
Note that this deﬁnition allows for loops (when a = b) and multiple edges
(when i(e
1
)=i(e
2
) for e
1
negationslash= e
2
).
4
The deﬁnition of an undirected graph diﬀers
only in the way the word “join” is deﬁned.
Deﬁnition 2.11 An undirected graph G is a ﬁnite set of vertices V
G
and a
ﬁnite set of edges E
G
, along with a function i: E
G
−→ V
G
×V
G
. For any edge
e ∈ E
G
,ifi(e)=(a,b), we say that vertices a and b are joined by edge e,or
equivalently, e joins a to b and e joins b to a. (Here it is possible that a = b;if
i(e)=(a,a), then e is a loop joining a to itself.)
While these deﬁnitions are mathematically rigorous, they can be hard to
conceptualize. It is still important to think of a graph as a picture: each vertex
corresponds to a dot, and each edge corresponds to an arrow (for directed
graphs) or a line (for undirected graphs).
2.6.2 Isomorphisms of Graphs
What really matters about a graph is the relationship it describes among its
vertices. You can draw a given graph any way you choose, as long as you
connect the vertices correctly. Two graphs that share the same fundamental
structurearecalledisomorphic.Theprecisedeﬁnitionissimilartothedeﬁnition
4.Someauthorscallthisa“multigraph.”</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 128 — #68
✐
✐
✐
✐
✐
✐
128 Chapter 2 a73 Relational Thinking
of isomorphic posets. Note that, since Deﬁnitions 2.10 and 2.11 both stipulate
the meaning of the word “join,” the following deﬁnition can apply to directed
and undirected graphs simultaneously.
Deﬁnition 2.12 Let G be a graph with vertex set V
G
and edge set E
G
, and
let H be a graph with vertex set V
H
and edge set E
H
. Then G is isomorphic
to H if there are one-to-one correspondences
α : V
G
−→ V
H
and β : E
G
−→ E
H
such that, for any edge e∈E
G
,
e joins vertex v to vertex w ⇔ β(e) joins vertex α(v) to vertex α(w).
In this case, we write G
∼
= H.
For example, the graphs in Figure 2.24 are isomorphic. The one-to-one
correspondence of vertices is given by α(x
i
)=y
i
, and the correspondence of
edges is given by β(a
i
)=b
i
. By inspecting the graphs, it is evident that the
criterion
a
i
joins vertex x
j
to vertex x
k
⇔ b
i
joins vertex y
j
to vertex y
k
holds for all i, j, and k.
x
2
x
3
x
1
x
5
x
4
a
2
a
4
a
1
a
3
y
3
y
1
y
5
y
2
y
4
a
5
a
6
b
6
b
2
b
1
b
3
b
5
b
4
Figure 2.24 Two isomorphic graphs.
Deﬁnition 2.12 is quite complicated, but it applies to any graph. For graphs
without multiple edges, the following theorem gives a simpler condition to
check.
Theorem 2.5 Let G and H be graphs without multiple edges, with vertex sets
V
G
and V
H
, respectively. For vertices x and y, write xRyif an edge joins x
to y. If there is a one-to-one correspondence f: V
G
−→ V
H
with the property
that
xRy⇔ f(x) Rf(y)
for all x,y∈V
G
, then G
∼
= H.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 129 — #69
✐
✐
✐
✐
✐
✐
2.6 Graph Theory 129
Proof We need to check that all the conditions of Deﬁnition 2.12 are satis-
ﬁed. Let α be the given one-to-one correspondence f: V
G
−→ V
H
. We deﬁne
β: E
G
−→ E
H
as follows. Given an edge e ∈ E
G
, let x and y be the vertices
that e joins, so xRy. Deﬁne β(e)∈E
H
to be the edge between f(x) and f(y).
We know there is an edge joining f(x)tof(y) because xRy⇒f(x) Rf(y).
Since H has no multiple edges, there is only one such edge. So β is well-deﬁned.
To show that β is onto, let a ∈ E
H
be an edge of H, and let v and w be
the vertices that a joins. Then there exist p,q ∈ V
G
such that f(p)=v and
f(q)=w, since f is onto. Furthermore, there is an edge joining p to q, since
f(p) Rf(q). So this edge in E
G
maps to a via β.
To show that β is one-to-one, suppose e
1
,e
2
∈E
G
with β(e
1
)=β(e
2
). Let
x
1
,y
1
and x
2
,y
2
be the vertices joined by e
1
and e
2
, respectively. Then β(e
1
)
joins f(x
1
)tof(y
1
), and it also joins f(x
2
)tof(y
2
). Therefore f(x
1
)=f(x
2
)
and f(y
1
)=f(y
2
), so x
1
= y
1
and x
2
= y
2
, since f is one-to-one. Since G has
no multiple edges, e
1
= e
2
.
We have shown that β is a one-to-one correspondence. By the way we
deﬁned β,
e joins vertex v to vertex w ⇔ β(e) joins vertex α(v) to vertex α(w).
so G
∼
= H. square
It is usually tricky to prove that two graphs are isomorphic, but it is less
tricky to use Theorem 2.5 than Deﬁnition 2.12. To check that the two graphs in
Figure 2.24 are isomorphic using the theorem, we only need to deﬁne a function
f on on vertices by f(x
i
)=y
i
. Since each pair of vertices deﬁnes at most one
edge, there is no need for a separate function on edges. Of course, we must also
check that f is a one-to-one correspondence, and that an edge joins x
i
to x
j
whenever an edge joins y
i
to y
j
.
It follows immediately from the deﬁnition that isomorphic graphs must
have the same number of vertices and the same number of edges. It is also true,
buthardertoshow,thatcorrespondingverticesofisomorphicgraphsmusthave
the same degree. This is left as Exercise 1.
In fact, an isomorphism between two graphs guarantees that the graphs
share any property having to do with the structure of the graph. For example,
if G
∼
= H, and G has an Euler circuit, then so does H.IfG is planar, so is H.
The only diﬀerences between isomorphic graphs lie in the way they are labeled
and drawn.
2.6.3 Degree Counting
In Section 2.1, we stated several observations of Euler, which we now make
precisewithmodernstatementsandproofs.Theﬁrsttheoremdescribesauseful</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 130 — #70
✐
✐
✐
✐
✐
✐
130 Chapter 2 a73 Relational Thinking
condition on the degrees of the vertices in any graph. First we must be precise
about the meaning of “degree.”
Deﬁnition 2.13 Let G be an undirected graph, and let x ∈ V
G
be a vertex.
Let D
1
be the set of all edges e∈E
G
such that i(e)=(x,b) for some b, and let
D
2
be the set of all edges e∈E
G
such that i(e)=(a,x) for some a. Then the
degree of x is |D
1
|+|D
2
|.
Inotherwords,inanundirectedgraph,thedegreeofavertexisthenumber
of edges that join to it, where loops are counted twice. It is left as an exercise
to write down similar deﬁnitions for the indegree and outdegree of a vertex in
a directed graph.
Theorem 2.6 Let G be an undirected graph. The sum of the degrees of the
vertices of G equals twice the number of edges in G.
Proof Since each edge joins two vertices (or possibly a single vertex to itself),
each edge contributes 2 to the sum of the degrees of the vertices. square
This simple theorem is surprisingly useful. In the discussion of the K¨onigs-
berg bridges, it tells us that it is impossible to have exactly one island with an
odd number of bridges to it: if one vertex had odd degree and the rest even,
the sum of the degrees would be odd, contradicting the theorem. By the same
reasoning, the number of odd-degree vertices must be even.
Example 2.56 Thereare11teamsinabroomballleague.Theleagueorganizer
decidesthateachteamwillplayﬁvegamesagainstdiﬀerentopponents.Explain
why this idea won’t work.
Solution: The situation can be modeled by a graph. The 11 teams are the ver-
tices, and the edges join pairs of teams that will play each other. Since the
organizer wants each team to play ﬁve games, the degree of each vertex is 5.
This means that the sum of the degrees of the vertices is 55, contradicting
Theorem 2.6. ♦
One thing to notice about this problem is that we were able to model and
solve this problem using graphs, but we never had to actually try to draw the
graph. Theorems (like 2.6) that tell you when you can’t do something can save
you a lot of work.
2.6.4 Euler Paths and Circuits
Recall the deﬁnitions of paths and circuits.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 131 — #71
✐
✐
✐
✐
✐
✐
2.6 Graph Theory 131
Deﬁnition 2.14 Let G be a graph. A path in G is a sequence
v
0
,e
1
,v
1
,e
2
,v
2
,...,v
n−1
,e
n
,v
n
ofvertices v
i
andedges e
i
suchthatedge e
i
joinsvertex v
i−1
tovertex v
i
,where
n ≥ 1. A circuit is path with v
0
= v
n
. A path or a circuit is called simple if
e
1
,e
2
,...,e
n
are all distinct. Recall that a graph is connected if there is a path
connecting any two pairs of vertices.
An Euler path (resp. Euler circuit) in a graph G is a simple path (resp.
simple circuit) using all the edges of G. Euler’s theorems on these constructions
are interesting because they describe local conditions (the degrees of vertices)
that completely determine the existence of a global object (an Euler path or
circuit). Such theorems should surprise us; they are amazing in the same way
that taking the temperature of the area under our tongue can tell us that our
immune system is ﬁghting oﬀ a virus. Euler managed to discover the perfect
“symptom” to test.
Theorem 2.7 If all the vertices of a connected graph G have even degree, then
G has an Euler circuit.
Proof Choose any vertex v of G. Follow a sequence of contiguous edges and
vertices, starting with v, without repeating any edges. Since every vertex has
even degree, this sequence will never get stuck at any vertex w negationslash= v, because
any edge we follow in to w will have another edge to follow out from w. Since
there are a ﬁnite number of edges, this sequence must end, so it must produce
a circuit ending at v. Call this circuit C
1
.
IfC
1
containsalltheedgesofG,wearedone.Ifnot,removetheedgesofC
1
fromG.TheresultinggraphG
prime
willstillhaveallverticesofevendegree,because
every edge in C
1
going in to a vertex had a matching edge going out. Now
repeat the construction of the previous paragraph on G
prime
to get another circuit
C
2
. Continue repeating this construction, producing circuits C
3
,C
4
,...,C
k
,
until all the edges have been used.
By construction, every edge of G appears exactly once in the list of circuits
C
1
,C
2
,...,C
k
. Since G is connected, every circuit C
i
must share a vertex with
someothercircuit C
j
.WecanthereforecombineanysuchpairC
i
,C
j
ofcircuits
into a new circuit by starting at this common vertex, following circuit C
i
, and
thenfollowingC
j
.Thiscombiningprocessreducesthenumberofcircuitsonour
list by one. Continue until one circuit remains. By construction, this remaining
circuit is an Euler circuit. square
The preceding is an example of a constructive proof; it describes how to
construct the hypothesized object. As such, this proof has added value because
it gives us a way to tell a computer how to produce an Euler circuit. The kind</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 132 — #72
✐
✐
✐
✐
✐
✐
132 Chapter 2 a73 Relational Thinking
of exact language required to write a proof is similar to the kind of instructions
you need to give to a computer to get it to do what you want.
The converse of Theorem 2.7 is also true, and easier to prove.
Theorem 2.8 If a graph G has an Euler circuit, then all the vertices of G
have even degree.
Proof Let v be a vertex in G. If the degree of v is zero, there is nothing to
prove. If the degree of v is nonzero, then some edges on the Euler circuit touch
it, and since the Euler circuit contains all of G’s edges, the number of touches
by these edges equals the degree of v. If we traverse the circuit, starting and
ending at v, we must leave v the same number of times as we return to v.
Therefore the number of touches by an edge in the Euler circuit is even. square
Euler’s observations about paths have related proofs. These are left as
exercises.
2.6.5 Hamilton Paths and Circuits
Euler’s theorems tell us just about all there is to know about the existence
of paths and circuits that visit every edge of a graph exactly once. So it is
natural to ask the same questions about paths and circuits that visit every
vertex of a graph exactly once. These constructions are named in honor of the
nineteenth-century Irish mathematician William Rowan Hamilton.
Deﬁnition 2.15 A Hamilton path in a graph G is a path
v
0
,e
1
,v
1
,e
2
,...,e
n
,v
n
such that v
0
,v
1
,...,v
n
is a duplicate-free list of all the vertices in G. A Hamil-
ton circuit is a circuit v
0
,e
1
,v
1
,e
2
,...,e
n
,v
n
,e
n+1
,v
0
, where v
0
,e
1
,v
1
,e
2
,...,
e
n
,v
n
is a Hamilton path.
Although it is easy to tell whether a given graph has an Euler circuit, it is
actuallyquitediﬃcult,ingeneral,todeterminewhetheragraphhasaHamilton
circuit. For graphs without too many vertices, it usually isn’t hard to ﬁnd a
Hamilton circuit when it is possible to do so. However, for graphs that don’t
have Hamilton circuits, it is often very tricky to prove that this is the case. The
next two examples illustrate this phenomenon.
Example 2.57 Find a Hamilton circuit in the graph in Figure 2.25.
Solution: One possible Hamilton circuit can be found as follows. (Try this with
a piece of tracing paper.) Starting at vertex a, travel counterclockwise around</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 133 — #73
✐
✐
✐
✐
✐
✐
2.6 Graph Theory 133
bc
d
a
e
f
o
n
m
tr
s
pq
h
g
j
i
l
k
Figure2.25 CanyouﬁndaHamiltoncircuitinthisgraph?SeeExample2.57.
the outer ring. Notice that you can’t go back to a until you have visited all
the vertices, so you will need to change direction when you get to e. Go from e
to f, and then go around clockwise from there, but you must change direction
again at i in order to leave room to get back to a. Then it is easy to see how
to ﬁnish. The sequence of vertices
a,b,c,d,e,f,o,n,m,l,k,j,i,r,s,t,p,q,g,h,a
forms a Hamilton circuit. ♦
Example 2.58 Prove that the graph in Figure 2.26 has no Hamilton circuit.
Proof Notice that this graph has ﬁve vertices of degree 2: f,h,j,l,n.Any
Hamilton circuit must pass through these vertices, so it must include the edges
that touch these vertices. But this makes it impossible to leave the outer ring:
wecan’taddedgestothoseforcedbytheverticesf,h,j,l,nbecausethatwould
f
o
n
m
tr
s
pq
h
g
j
i
l
k
Figure 2.26 Why is there no Hamilton circuit in this graph? See Exam-
ple 2.58.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 134 — #74
✐
✐
✐
✐
✐
✐
134 Chapter 2 a73 Relational Thinking
involve including three edges at some vertex, which can’t happen in a Hamilton
circuit: if a single vertex touches three edges in a path, the vertex must occur
twice in that path. square
The previous two arguments are ad hoc; they don’t generalize well to other
examples the way Euler’s theorems do. There are existence theorems about
Hamilton circuits, but they are quite diﬃcult to prove, and they don’t give a
complete characterization of graphs containing Hamilton circuits. In fact, the
problem of ﬁnding a Hamilton circuit in a graph belongs to a famous class of
problems called NP-complete. Roughly speaking, these are problems that are
diﬃcult to solve, but whose solutions are easy to check.
5
It may not be clear
whether a given graph has a Hamilton circuit, but it is really easy to check the
answer of a student who claims to have found one.
Euler and Hamilton circuits raise interesting mathematical questions, but
they also have several important applications. For example, consider a graph
model of a network of roads (edges) connecting various points of interest (ver-
tices). A street cleaner would be interested in an Euler circuit, because it would
provide a way to go down every street without having to retrace any steps. On
the other hand, a salesperson wanting an eﬃcient route through each point of
interest might ﬁnd a Hamilton circuit more useful.
2.6.6 Trees
InSection2.1,wesawhowtoorganizedatausingabinarysearchtree.Infuture
chapters, we will see several other uses for trees of various types. We wrap up
our look at the mathematical theory of graphs with some theorems about trees
in general.
Deﬁnition 2.16 A tree is a graph T with a speciﬁed vertex r, called the root,
with the property that, for any vertex v in T (vnegationslash= r), there is a unique simple
path from r to v.
This deﬁnition works for directed or undirected graphs. Usually we draw
trees as undirected graphs, but we often draw the tree with the root at the top
and an implicit downward direction on all the edges. The next theorem gives
an alternate characterization of a tree.
Theorem 2.9 Let G be an undirected graph, and let r ∈G. Then G is a tree
with root r if and only if G is connected and has no simple circuits.
5.WewillsaymoreaboutNP-completenessinChapter5.</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 135 — #75
✐
✐
✐
✐
✐
✐
2.6 Graph Theory 135
Proof (⇒) Suppose that G is an undirected tree with root r. Let a,b be
two vertices in G. By Deﬁnition 2.16, there are paths from r to a and r to b.
Therefore, there is a path from a to b via r,soG is connected.
Suppose, to the contrary, that
v
0
,e
1
,v
1
,e
2
,...,v
k−1
,e
k
,v
0
is a simple circuit in G. We can relabel this circuit, if necessary, so that v
0
negationslash= r.
If r = v
i
for some i, then
v
0
,e
1
,...,r and r,e
i+1
,...,e
k
,v
0
are two diﬀerent simple paths from v
0
to r, contradicting the deﬁnition of a
tree. If rnegationslash= v
i
for any i, then there is a simple path from r to v
0
, and combining
this path with the sequence
e
1
,v
1
,e
2
,...,v
k−1
,e
k
,v
0
yields another simple path from r to v
0
, a contradiction.
(⇐) Now suppose that G is a connected undirected graph with no simple
circuits. Let vnegationslash= r be a vertex in G. Since G is connected, there is a path from
r to v. If this path does not repeat any vertices, then it does not repeat any
edges, so it is simple. If this path has the form
r,e
1
,...,e
i
,a,e
i+1
,...,e
k
,a,e
k+1
,...,e
n
,v
for some vertex a, then we can replace it with a shorter path
r,e
1
,...,e
i
,a,e
k+1
,...,e
n
,v
thatstillgoesfromr tov.Furthermore,wecanrepeatthisshorteningprocedure
until there are no repeated vertices. So there is a simple path from r to v.To
show that G is a tree with root r, we need to show that this path is unique.
But if there were two distinct simple paths
r,e
1
,v
1
,...,v
n−1
,e
n
,v and r,d
1
,w
1
,...,w
m−1
,d
m
,v
from r to v, we could combine them to form a circuit
r,e
1
,v
1
,...,v
n−1
,e
n
,v,d
m
,w
m−1
,...,w
1
,d
1
,r
in G. While this circuit may not be simple, it must contain a simple circuit,
since there is at least one d
i
that diﬀers from all the e
j
’s. (This detail is left as
Exercise 19.) This contradicts that G has no simple circuits. square
AnimportantconsequenceofTheorem2.9isthatyoucanchooseanyvertex
tobetherootofanundirectedtree.Figure2.27showsthesameundirectedtree</p>
      <p>✐
✐
“48927˙CH02˙Hunter” — 2008/10/15 — 5:03 — page 136 — #76
✐
✐
✐
✐
✐
✐
136 Chapter 2 a73 Relational Thinking
r
2
r
2
r
2
r
1
r
1
r
1
(a) (b) (c)
Figure 2.27 You can choose the root in an undirected tree.
drawn three diﬀerent ways: ﬁrst (a) without a root, then (b) with root r
1
, and
ﬁnally (c) with root r
2
. Imagine that the graph is made of beads and string. In
graph (a), pick up the bead that you want to be the root (r
1
or r
2
), and let the
rest of the beads hang down to get graphs (b) or (c). This process is intuitively
obvious, but the previous proof gives us a solid mathematical justiﬁcation: if
a graph G is connected and has no simple circuits, it is a tree with root r,
for any vertex r in G. And any undirected tree is a connected graph with no
simple circuits, so any vertex can be the root. A corollary follows from this
observation.
Corollary 2.1 In an undirected tree, there is a unique simple path between
any two vertices in the tree.
Proof Let a,b be two vertices in an undirected tree T. Then T can be viewed
as a tree with root a, so by Deﬁnition 2.16 there is a unique simple path from
a to b. square
ThecharacterizationoftreesinDeﬁnition2.16impliesquitealotaboutthe
structure of these graphs. Let v be a nonroot vertex of a tree T. Since there is
a unique simple path from the root r of T to v, there is a well-deﬁned natural
number d(v) that equals the number of edges in this path. Call the number
d(v) the depth of the vertex v. By convention, d(r) = 0. The height of the tree
T is the maximum value of d(v) over all the vertices v in T. For example, the
tree in Figure 2.27(c) has height 4, and d(r
1
) = 2 in this tree. Of course, the
depth function and the height of a tree depend on the choice of root; the tree
in Figure 2.27(b) has height 3.
Another implication of the deﬁnition is that we can make an undirected
tree into a tree in a well-deﬁned way, by choosing a direction on each edge away
from the root. More precisely, start at the root, and direct each edge outward.
These edges will end in vertices of depth 1, and all the vertices of depth 1 will
now have directed edges to them. Repeat this process, forming directed edges</p>
  </body>
</html>